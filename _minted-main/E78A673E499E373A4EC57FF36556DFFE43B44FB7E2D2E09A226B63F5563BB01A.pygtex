\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZdq{}CANTestTask.hpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZdq{}CANGatekeeperTask.hpp\PYGZdq{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{CANTestTask::execute}\PYG{p}{()}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{n}{CAN}\PYG{o}{::}\PYG{n}{Application}\PYG{o}{::}\PYG{n}{switchBus}\PYG{p}{(}\PYG{n}{CAN}\PYG{o}{::}\PYG{n}{Driver}\PYG{o}{::}\PYG{n}{Redundant}\PYG{p}{);}
\PYG{c+c1}{//    CAN::Frame message = \PYGZob{}\PYGZcb{};}
\PYG{c+c1}{//}
\PYG{c+c1}{//    /**}
\PYG{c+c1}{//     * Simple 64 byte message sending}
\PYG{c+c1}{//     */}
\PYG{c+c1}{//    message.id = 0x10A;}
\PYG{c+c1}{//    for (uint8\PYGZus{}t idx = 0; idx \PYGZlt{} CAN::Frame::MaxDataLength; idx++) \PYGZob{}}
\PYG{c+c1}{//        message.data.push\PYGZus{}back(idx);}
\PYG{c+c1}{//    \PYGZcb{}}
\PYG{c+c1}{//}
\PYG{c+c1}{//    while (true) \PYGZob{}}
\PYG{c+c1}{//        canGatekeeperTask\PYGZhy{}\PYGZgt{}send(message);}
\PYG{c+c1}{//        vTaskDelay(pdMS\PYGZus{}TO\PYGZus{}TICKS(1000));}
\PYG{c+c1}{//    \PYGZcb{}}

\PYG{+w}{    }\PYG{c+cm}{/**}
\PYG{c+cm}{     * Ping messages to OBC}
\PYG{c+cm}{     */}
\PYG{c+c1}{//    while (true) \PYGZob{}}
\PYG{c+c1}{//        CAN::Application::sendPingMessage(CAN::Application::NodeIDs::OBC, false);}
\PYG{c+c1}{//        vTaskDelay(pdMS\PYGZus{}TO\PYGZus{}TICKS(1000));}
\PYG{c+c1}{//    \PYGZcb{}}

\PYG{+w}{    }\PYG{c+cm}{/**}
\PYG{c+cm}{     * Housekeeping parameters sending}
\PYG{c+cm}{     */}
\PYG{c+c1}{//    while (true) \PYGZob{}}
\PYG{c+c1}{//        CAN::Application::createSendParametersMessage(CAN::Application::NodeIDs::OBC, false, \PYGZob{}2, 7\PYGZcb{}, false);}
\PYG{c+c1}{//        vTaskDelay(pdMS\PYGZus{}TO\PYGZus{}TICKS(1000));}
\PYG{c+c1}{//    \PYGZcb{}}

\PYG{+w}{    }\PYG{c+cm}{/**}
\PYG{c+cm}{     * Log messages utilizing multiple messages}
\PYG{c+cm}{     */}
\PYG{+w}{    }\PYG{k}{while}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{true}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{String}\PYG{o}{\PYGZlt{}}\PYG{n}{ECSSMaxMessageSize}\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{n}{logString}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}This is a log message going from the development board to the eqm that consists of more than 64 chars\PYGZdq{}}\PYG{p}{;}
\PYG{+w}{        }\PYG{n}{CAN}\PYG{o}{::}\PYG{n}{Application}\PYG{o}{::}\PYG{n}{createLogMessage}\PYG{p}{(}\PYG{n}{CAN}\PYG{o}{::}\PYG{n}{NodeIDs}\PYG{o}{::}\PYG{n}{OBC}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{true}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{logString}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{false}\PYG{p}{);}
\PYG{+w}{        }\PYG{n}{vTaskDelay}\PYG{p}{(}\PYG{n}{pdMS\PYGZus{}TO\PYGZus{}TICKS}\PYG{p}{(}\PYG{l+m+mi}{1000}\PYG{p}{));}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
